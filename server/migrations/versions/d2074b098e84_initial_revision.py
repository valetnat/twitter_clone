"""Initial revision

Revision ID: d2074b098e84
Revises:
Create Date: 2024-11-28 11:05:52.346978

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d2074b098e84"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "attachment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("path", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_attachment")),
    )
    op.create_index(op.f("ix_attachment_id"), "attachment", ["id"], unique=False)
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=50), nullable=False),
        sa.Column("api_key", sa.VARCHAR(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
        sa.UniqueConstraint("api_key", name=op.f("uq_user_api_key")),
    )
    op.create_index(op.f("ix_user_api_key"), "user", ["api_key"], unique=False)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_table(
        "follower",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("followed_user_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.CheckConstraint("user_id != followed_user_id", name=op.f("ck_follower_`check_user_not_follow_self`")),
        sa.ForeignKeyConstraint(
            ["followed_user_id"], ["user.id"], name=op.f("fk_follower_followed_user_id_user"), ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk_follower_user_id_user"), ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_follower")),
        sa.UniqueConstraint("user_id", "followed_user_id", name=op.f("uq_follower_user_id")),
    )
    op.create_table(
        "tweet",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("attachments", postgresql.ARRAY(sa.Integer()), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk_tweet_user_id_user"), ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tweet")),
    )
    op.create_index(
        "gix_tweet_content_ru",
        "tweet",
        [sa.text("to_tsvector('russian', content)")],
        unique=False,
        postgresql_using="gin",
    )
    op.create_table(
        "like",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("tweet_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["tweet_id"], ["tweet.id"], name=op.f("fk_like_tweet_id_tweet"), ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk_like_user_id_user"), ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_like")),
        sa.UniqueConstraint("user_id", "tweet_id", name=op.f("uq_like_user_id")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("like")
    op.drop_index("gix_tweet_content_ru", table_name="tweet", postgresql_using="gin")
    op.drop_table("tweet")
    op.drop_table("follower")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_api_key"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_attachment_id"), table_name="attachment")
    op.drop_table("attachment")
    # ### end Alembic commands ###
